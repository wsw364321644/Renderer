@startuml
|FEngineLoop|
start
while(itr GEngine->GetWorldContexts())
:ENQUEUE_RENDER_COMMAND(UpdateScenePrimitives);
fork
start
fork again
|TEnqueueUniqueRenderCommandType|
:DoTask;
|FScene|
:UpdateAllPrimitiveSceneInfos;
|FPrimitiveSceneInfo|
:AddToScene;
:AddStaticMeshes;
:CacheMeshDrawCommands;
:ParallelForImpl::ParallelForInternal;
fork
:[Scene, SceneInfos]<lambda>(int32 Index);

while (EMeshPass) is ( iter )
:FPassProcessorManager::GetCreateFunction;
while (MeshBatches) is ( iter )

|FMeshPassProcessor|
note right
  FDepthPassMeshProcessor
end note

:AddMeshBatch;
:Process;
:BuildMeshDrawCommands;

|FPrimitiveSceneInfo|
end while(iter end)
end while(iter end)
end fork
kill
stop
|FEngineLoop|
end fork
end while(iter end)

:ENQUEUE_RENDER_COMMAND(BeginFrame);


while(itr GEngine->GetWorldContexts())
:ENQUEUE_RENDER_COMMAND(SceneStartFrame);
fork
start
fork again
|FScene|
:StartFrame;
kill
|FEngineLoop|
end fork



stop
@enduml